{"version":3,"sources":["components/AppNavbar.js","components/GiftCards.js","components/Footer.js","components/GiftCard.js","components/CheckoutConfirmation.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","Container","className","Component","GiftCards","giftCards","id","uuid","src","renderGiftCards","map","giftcard","alt","console","log","href","Footer","fluid","Row","Col","xs","GiftCard","CheckOut","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b7fe334.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'reactstrap'\n\nclass AppNavbar extends Component {\n\n  state = {\n    isOpen: false\n  }\n\n  toggle = () => {\n    this.state({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  render () {\n    return (\n      <div>\n         <Container> \n           <h1 className=\"main-title\">Gift Cards <br/>Belize</h1>\n           <p className=\"sub-title\">Purchase cards with your Oblip account</p>\n\n            <div className=\"bread-crumbs\">\n              <p>Home</p>\n            </div>\n        </Container>\n    </div>\n    )\n  }\n}\n\nexport default AppNavbar;","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\n\nexport default class GiftCards extends Component {\n  state = {\n    giftCards: [\n      { id: uuid(), src: 'https://lh3.googleusercontent.com/7Rp8nh8n5Y3DdY-YM01O0gSDqa-BwKYlKGzwPMlBvFsOaaHYfVdQ4uJhs-AY_w07dZdsnTFz8XIYeBZ6w7RGfwJeVTt93ISin6rXHA=s0' },\n      { id: uuid(), src: 'https://mk0avenuetjo4k1o6nk6.kinstacdn.com/wp-content/uploads/sites/26/2017/10/Amazon.com-gift-card.png' },\n      { id: uuid(), src: 'https://lh3.googleusercontent.com/7Rp8nh8n5Y3DdY-YM01O0gSDqa-BwKYlKGzwPMlBvFsOaaHYfVdQ4uJhs-AY_w07dZdsnTFz8XIYeBZ6w7RGfwJeVTt93ISin6rXHA=s0' },\n      { id: uuid(), src: 'https://lh3.googleusercontent.com/7Rp8nh8n5Y3DdY-YM01O0gSDqa-BwKYlKGzwPMlBvFsOaaHYfVdQ4uJhs-AY_w07dZdsnTFz8XIYeBZ6w7RGfwJeVTt93ISin6rXHA=s0' },\n      { id: uuid(), src: 'https://lh3.googleusercontent.com/7Rp8nh8n5Y3DdY-YM01O0gSDqa-BwKYlKGzwPMlBvFsOaaHYfVdQ4uJhs-AY_w07dZdsnTFz8XIYeBZ6w7RGfwJeVTt93ISin6rXHA=s0' },\n    ]\n  }\n\n  renderGiftCards = () => {\n    const { giftCards } = this.state;\n    \n    giftCards.map(giftcard => {\n      return (\n        <div className=\"gift-cards-item\">\n          <img src={giftcard.src} alt=\"card\"/>\n        </div>\n      );\n    });\n    console.log(giftCards)\n  }\n\n  render() {\n    return (\n      <Container className=\"gift-cards-container\">\n         <h4>Select a Gift Card</h4>\n         <hr className=\"my-2\" />\n        <div className=\"gift-cards-items\"> \n          <a href=\"/gift-card/google-play-card\">\n            <div className=\"gift-cards-item\">\n              <img src=\"https://lh3.googleusercontent.com/7Rp8nh8n5Y3DdY-YM01O0gSDqa-BwKYlKGzwPMlBvFsOaaHYfVdQ4uJhs-AY_w07dZdsnTFz8XIYeBZ6w7RGfwJeVTt93ISin6rXHA=s0\" alt=\"card\"/>\n            </div> \n          </a>\n          <div className=\"gift-cards-item\">\n            <img src=\"https://mk0avenuetjo4k1o6nk6.kinstacdn.com/wp-content/uploads/sites/26/2017/10/Amazon.com-gift-card.png\" alt=\"card\"/>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}","import React, { Component } from 'react'; \nimport { Row , Col, Container } from 'reactstrap'\n\nexport default class Footer extends Component {\n    render() { \n        return ( \n           <Container className=\"footer-container\" fluid={true}>\n                <Row>\n                    <Col xs=\"1\"> \n                    </Col>\n                    <Col xs=\"3\">\n                        <p className=\"footer-logo-text\">Powered By</p>\n                        <div className=\"footer-logo\">\n                        <a href=\"#\"><img src=\"logo192.png\"/></a>\n                        </div> \n                        <div className=\"footer-copy-right\">\n                            <p>Copyright @ giftcards Belize</p>\n                            <div className=\"footer-social-logos\">\n                               <a href=\"#\"><img src=\"logo192.png\" alt=\"facebook\"/></a>\n                               <a href=\"#\"><img src=\"logo192.png\" alt=\"twitter\"/></a>\n                               <a href=\"#\"><img src=\"logo192.png\" alt=\"instagram\"/></a>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col xs=\"2\">\n                      <div className=\"footer-col\">\n                      <p className=\"footer-header\">Company</p>\n                       <ul>\n                           <li>\n                               <a href=\"#\">About</a>\n                            </li>\n                            <li>\n                               <a href=\"#\">Blog</a>\n                            </li>\n                       </ul>\n                      </div>\n                    </Col>\n                    <Col xs=\"2\">\n                       <div className=\"footer-col\">\n                       <p className=\"footer-header\">Help Center</p>\n                        <ul>\n                            <li>\n                                <a href=\"#\">Support</a>\n                            </li>\n                            <li>\n                                <a href=\"#\">FAQ</a>\n                            </li>\n                        </ul>  </div>  \n                    </Col> \n                </Row>\n           </Container>\n        );\n      }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\n\nexport default class GiftCard extends Component { \n    render() { \n        return ( \n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        Card Image\n                    </Col>\n\n                    <Col xs=\"6\">\n                        Google Play Gift Card\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\n\nexport default class CheckOut extends Component { \n    render() { \n        return ( \n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        Card Image\n                    </Col>\n\n                    <Col xs=\"6\">\n                        Google Play Gift Card\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport AppNavbar from './components/AppNavbar' \n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport GiftCards from './components/GiftCards';\nimport Footer from './components/Footer';\nimport GiftCard from './components/GiftCard';\nimport CheckOut from './components/CheckoutConfirmation';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL  + '/'}>\n      <div className=\"App\">\n        <AppNavbar /> \n            <Route exact path=\"/\">\n              <GiftCards/>\n            </Route>\n            <Route path=\"/gift-card/:id\">\n              <GiftCard/>\n            </Route>\n            <Route path=\"/check-out\">\n              <CheckOut/>\n            </Route> \n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}